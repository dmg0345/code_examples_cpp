// For format details, see https://aka.ms/devcontainer.json.
// This is the devcontainer JSON configuration file for the Visual Studio Code Dev Containers extension.
{
    // Path to the 'docker-compose' file to use relative to the location of this file.
    // Using docker-compose allows to run one to multiple containers, depending on the application.
    "dockerComposeFile": "compose.yaml",
    // Name of the service defined in the 'docker-compose' file which will be used in Visual Studio Code.
    "service": "vscode",
    // Set the workspace folder to the mapped volume to the project root folder set in 'docker-compose' file.
    "workspaceFolder": "/workspace",
    // Set the name of the container in Visual Studio Code user interface, this is not the same as the container name.
    "name": "code_examples_cpp",
    // Apply customizations to tools in the container.
    "customizations": {
        "vscode": {
            // Extensions to use.
            "extensions": [
                // Find extensions at: https://marketplace.visualstudio.com/vscode
                // C/C++ related extensions.
                "ms-vscode.cpptools@1.16.3",
                "llvm-vs-code-extensions.vscode-clangd@0.1.24",
                "ms-vscode.cpptools-themes@2.0.0",
                "jeff-hykin.better-cpp-syntax@1.17.2",
                "ms-vscode.cmake-tools@1.14.34",
                "josetr.cmake-language-support-vscode@0.0.9",
                "cschlosser.doxdocgen@1.4.0",

                // Other.
                "ms-vscode.powershell@2023.6.0",
                "phil294.git-log--graph@0.1.12",
                "github.vscode-github-actions@0.26.2", // Mainly used for validation and intellisense.
                "trond-snekvik.simple-rst@1.5.3",
                "lextudio.restructuredtext@189.3.0",
                "tamasfe.even-better-toml@0.19.2",
                "hediet.vscode-drawio@1.6.6",
                "tomoki1207.pdf@1.2.2",
                "ms-vscode.live-server@0.4.8"
            ],

            // Set the settings.
            "settings": {
                // Define 'pwsh' profile for Linux enviroments, this ensures the use of PowerShell in terminals.
                // Start it with the Python virtual environment already activated.
                "terminal.integrated.profiles.linux": {
                    "pwsh": {
                        "path": "pwsh",
                        "icon": "terminal-powershell",
                        "args": ["-NoExit", "-Command", "& /usr/venvs/development/bin/Activate.ps1"]
                    }
                },
                // Set the default profile to 'pwsh' in Linux enviroments.
                "terminal.integrated.defaultProfile.linux": "pwsh"
            }
        }
    }
}